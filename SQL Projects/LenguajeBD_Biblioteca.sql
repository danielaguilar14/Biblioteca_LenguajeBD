-- Tabla de Usuarios
CREATE TABLE USUARIOS (
    ID_USUARIO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    CORREO VARCHAR2(100) UNIQUE NOT NULL,
    TELEFONO VARCHAR2(15),
    ROL VARCHAR2(20) CHECK (ROL IN ('ADMIN', 'USUARIO'))
);

-- Tabla de Libros
CREATE TABLE LIBROS (
    ID_LIBRO NUMBER PRIMARY KEY,
    TITULO VARCHAR2(100) NOT NULL,
    AUTOR VARCHAR2(100) NOT NULL,
    CATEGORIA VARCHAR2(50),
    DISPONIBLE CHAR(1) DEFAULT 'S' CHECK (DISPONIBLE IN ('S', 'N'))
);

-- Tabla de Pr√©stamos
CREATE TABLE PRESTAMOS (
    ID_PRESTAMO NUMBER PRIMARY KEY,
    ID_USUARIO NUMBER,
    ID_LIBRO NUMBER,
    FECHA_PRESTAMO DATE,
    FECHA_DEVOLUCION DATE,
    CONSTRAINT FK_PRESTAMO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
    CONSTRAINT FK_PRESTAMO_LIBRO FOREIGN KEY (ID_LIBRO) REFERENCES LIBROS(ID_LIBRO)
);

-- Tabla de Reservas
CREATE TABLE RESERVAS (
    ID_RESERVA NUMBER PRIMARY KEY,
    ID_USUARIO NUMBER,
    ID_LIBRO NUMBER,
    FECHA_RESERVA DATE,
    CONSTRAINT FK_RESERVA_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
    CONSTRAINT FK_RESERVA_LIBRO FOREIGN KEY (ID_LIBRO) REFERENCES LIBROS(ID_LIBRO)
);

-- Tabla de Reportes
CREATE TABLE REPORTES (
    ID_REPORTE NUMBER PRIMARY KEY,
    TIPO_REPORTE VARCHAR2(50),
    FECHA_GENERACION DATE
);

-- Procedimiento para consultar libros usando cursor
CREATE OR REPLACE PROCEDURE sp_consultar_libros
IS
    CURSOR cur_libros IS 
        SELECT ID_LIBRO, TITULO, AUTOR, CATEGORIA, DISPONIBLE FROM LIBROS;
BEGIN
    FOR libro IN cur_libros LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || libro.ID_LIBRO || 
                             ', Titulo: ' || libro.TITULO ||
                             ', Autor: ' || libro.AUTOR ||
                             ', Categoria: ' || libro.CATEGORIA ||
                             ', Disponible: ' || libro.DISPONIBLE);
    END LOOP;
END;
/

-- Procedimiento para insertar un libro
CREATE OR REPLACE PROCEDURE sp_insertar_libro (
    p_id_libro IN NUMBER,
    p_titulo IN VARCHAR2,
    p_autor IN VARCHAR2,
    p_categoria IN VARCHAR2,
    p_disponible IN CHAR
)
IS
BEGIN
    INSERT INTO LIBROS (ID_LIBRO, TITULO, AUTOR, CATEGORIA, DISPONIBLE)
    VALUES (p_id_libro, p_titulo, p_autor, p_categoria, p_disponible);
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Libro registrado correctamente');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al insertar el libro ' || SQLERRM);
END;
/
