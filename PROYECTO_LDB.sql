-- Tabla de Usuarios
CREATE TABLE USUARIOS (
    ID_USUARIO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    CORREO VARCHAR2(100) UNIQUE NOT NULL,
    TELEFONO VARCHAR2(15),
    ROL VARCHAR2(20) CHECK (ROL IN ('ADMIN', 'USUARIO'))
);

-- Tabla de Libros
CREATE TABLE LIBROS (
    ID_LIBRO NUMBER PRIMARY KEY,
    TITULO VARCHAR2(100) NOT NULL,
    AUTOR VARCHAR2(100) NOT NULL,
    CATEGORIA VARCHAR2(50),
    DISPONIBLE CHAR(1) DEFAULT 'S' CHECK (DISPONIBLE IN ('S', 'N'))
);

-- Tabla de Préstamos
CREATE TABLE PRESTAMOS (
    ID_PRESTAMO NUMBER PRIMARY KEY,
    ID_USUARIO NUMBER,
    ID_LIBRO NUMBER,
    FECHA_PRESTAMO DATE,
    FECHA_DEVOLUCION DATE,
    CONSTRAINT FK_PRESTAMO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
    CONSTRAINT FK_PRESTAMO_LIBRO FOREIGN KEY (ID_LIBRO) REFERENCES LIBROS(ID_LIBRO)
);

-- Tabla de Reservas
CREATE TABLE RESERVAS (
    ID_RESERVA NUMBER PRIMARY KEY,
    ID_USUARIO NUMBER,
    ID_LIBRO NUMBER,
    FECHA_RESERVA DATE,
    CONSTRAINT FK_RESERVA_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
    CONSTRAINT FK_RESERVA_LIBRO FOREIGN KEY (ID_LIBRO) REFERENCES LIBROS(ID_LIBRO)
);

-- Tabla de Reportes
CREATE TABLE REPORTES (
    ID_REPORTE NUMBER PRIMARY KEY,
    TIPO_REPORTE VARCHAR2(50),
    FECHA_GENERACION DATE
);



--- PROCEDIMIENTOS ALMACENADOS ---

1. AGREGAR USUARIO

CREATE OR REPLACE PROCEDURE SP_AGREGAR_USUARIO(
    SP_NOMBRE IN VARCHAR2,
    SP_CORREO IN VARCHAR2,
    SP_TELEFONO IN VARCHAR2,
    SP_ROL IN VARCHAR2
)
AS
BEGIN
    INSERT INTO USUARIOS(NOMBRE, CORREO, TELEFONO, ROL)
    VALUES(SP_NOMBRE, SP_CORREO, SP_TELEFONO, SP_ROL);
END;


2. ELIMINAR USUARIO POR ID

CREATE OR REPLACE PROCEDURE SP_ELIMINAR_USUARIO(
    SP_ID_USUARIO IN NUMBER
)
AS
BEGIN
    DELETE FROM USUARIOS
    WHERE ID_USUARIO = SP_ID_USUARIO;
END;


3. ACTUALIZAR DATOS USUARIO

CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_USUARIO(
    SP_ID IN NUMBER,
    SP_NOMBRE IN VARCHAR2,
    SP_CORREO IN VARCHAR2,
    SP_TELEFONO IN VARCHAR2,
    SP_ROL IN VARCHAR2
)
AS
BEGIN
    UPDATE USUARIOS
    SET NOMBRE = SP_NOMBRE, 
    CORREO = SP_CORREO, 
    TELEFONO = SP_TELEFONO, 
    ROL = SP_ROL
    WHERE ID_USUARIO = SP_ID;
END;


-- 4. AGREGAR NUEVO LIBRO

CREATE OR REPLACE PROCEDURE SP_AGREGAR_LIBRO(
    SP_ID IN NUMBER,
    SP_TITULO IN VARCHAR2,
    SP_AUTOR IN VARCHAR2,
    SP_CATEGORIA IN VARCHAR2,
    SP_DISPONIBLE IN CHAR
)
AS
BEGIN
    INSERT INTO LIBROS(ID_LIBRO, TITULO, AUTOR, CATEGORIA, DISPONIBLE)
    VALUES(SP_ID, SP_TITULO, SP_AUTOR, SP_CATEGORIA, SP_DISPONIBLE);
    COMMIT;
END;


--5. ACTUALIZAR LIBRO

CREATE OR REPLACE PROCEDURE SP_AGREGAR_LIBRO(
    SP_ID IN NUMBER,
    SP_TITULO IN VARCHAR2,
    SP_AUTOR IN VARCHAR2,
    SP_CATEGORIA IN VARCHAR2,
    SP_DISPONIBLE IN CHAR
)
AS
    CURSOR C_INSERT IS
        SELECT 1 FROM  DUAL;
BEGIN
    OPEN C_INSERT;
    INSERT INTO LIBROS(ID_LIBRO, TITULO, AUTOR, CATEGORIA, DISPONIBLE)
    VALUES(SP_ID, SP_TITULO, SP_AUTOR, SP_CATEGORIA, SP_DISPONIBLE);
    CLOSE C_INSERT;
END;


6. ELIMINAR LIBRO POR ID

CREATE OR REPLACE PROCEDURE SP_ELIMINAR_LIBRO(SP_ID IN NUMBER)
AS
BEGIN
    DELETE FROM LIBROS WHERE ID_LIBRO = SP_ID;
END;


--7. FECHA DE DEVOLUCION ACTUALIZADA

CREATE OR REPLACE PROCEDURE SP_ACTUALIZA_FECHA_DEVOLUCION(
    SP_ID_PRESTAMO IN NUMBER,
    SP_FECHA_ACTUALIZADA IN DATE
)
AS
BEGIN
    UPDATE PRESTAMOS
    SET FECHA_DEVOLUCION = SP_FECHA_ACTUALIZADA
    WHERE ID_PRESTAMO = SP_ID_PRESTAMO;
END;


8. RESERVAR LIBRO

CREATE OR REPLACE PROCEDURE SP_RESERVAR_LIBRO(
    SP_ID_RESERVA IN NUMBER,
    SP_ID_USUARIO IN NUMBER,
    SP_ID_LIBRO IN NUMBER,
    SP_FECHA_RESERVACION IN DATE
)
AS
BEGIN
    INSERT INTO RESERVAS (ID_RESERVA, ID_USUARIO, ID_LIBRO, FECHA_RESERVA)
    VALUES (SP_ID_RESERVA, SP_ID_USUARIO, SP_ID_LIBRO, SP_FECHA_RESERVACION);
END;


9. PRESTAMO LIBRO

CREATE OR REPLACE PROCEDURE SP_PRESTAMO(
    SP_ID_PRESTAMO IN NUMBER,
    SP_ID_USUARIO IN NUMBER,
    SP_ID_LIBRO IN NUMBER,
    SP_FECHA_PRESTAMO IN DATE,
    FECHA_DEVOLUCION IN DATE
)
AS
BEGIN
    INSERT INTO PRESTAMOS (ID_PRESTAMO, ID_USUARIO, ID_LIBRO, FECHA_PRESTAMO, FECHA_DEVOLUCION)
    VALUES (SP_ID_PRESTAMO, SP_ID_USUARIO, SP_ID_LIBRO, SP_FECHA_PRESTAMO, FECHA_DEVOLUCION);
END;


10. ELIMINAR PRESTAMO LIBRO

CREATE OR REPLACE PROCEDURE SP_ELIMINAR_PRESTAMO(SP_ID IN NUMBER)
AS
BEGIN
    DELETE FROM PRESTAMOS
    WHERE ID_PRESTAMO = SP_ID;
END;


--11. PRESTAMOS ACTIVOS DE UN SUUARIO

CREATE OR REPLACE PROCEDURE SP_PRESTAMOS_ACTIVOS (SP_ID_USUARIO IN NUMBER)
AS
    CURSOR C_PRESTAMOS IS
        SELECT ID_PRESTAMO
        FROM PRESTAMOS
        WHERE ID_USUARIO = SP_ID_USUARIO
        AND FECHA_DEVOLUCION IS NULL;
BEGIN
    FOR PRESTAMO IN C_PRESTAMOS LOOP
        DBMS_OUTPUT.PUT_LINE('El prestamo: ' || prestamo.ID_PRESTAMO || ' se encuentra activo');
    END LOOP;
END;


--12. VERIFICAR DISPONIBILIDAD 

CREATE OR REPLACE PROCEDURE SP_DISPONIBILIDAD (
    SP_ID_LIBRO IN NUMBER,
    SP_DISPONIBLE OUT CHAR
)
AS
    CURSOR C_LIBRO IS
        SELECT DISPONIBLE
        FROM LIBROS
        WHERE ID_LIBRO = SP_ID_LIBRO;
    VDIS CHAR(1);
BEGIN
    OPEN C_LIBRO;
    FETCH C_LIBRO 
    INTO VDIS;
    
    IF C_LIBRO%FOUND THEN
        SP_DISPONIBLE := VDIS;
    ELSE
        SP_DISPONIBLE := 'N';
    END IF;
    
    CLOSE C_LIBRO;
END;


--13. NOMBRE DE USUARIO POR ID

CREATE OR REPLACE PROCEDURE SP_NOMBRE_USUARIO(
    SP_ID_USUARIO IN NUMBER,
    SP_NOMBRE OUT VARCHAR2
)
AS 
    CURSOR C_USUARIO IS
        SELECT NOMBRE
        FROM USUARIOS
        WHERE ID_USUARIO = SP_ID_USUARIO;
    VNOM VARCHAR2(50);
BEGIN
    FOR USUARIO IN C_USUARIO LOOP
        SP_NOMBRE := USUARIO.NOMBRE;
    END LOOP;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        SP_NOMBRE := NULL;
END; 


--14. ELIMINAR RESERVA POR ID

CREATE OR REPLACE PROCEDURE SP_ELIMINAR_RESERVA (SP_ID IN NUMBER)
AS
BEGIN
    DELETE FROM RESERVAS 
    WHERE ID_RESERVA = SP_ID;
END;


-- 15. LIBROS DISPONIBLES POR CATEGORIA

CREATE OR REPLACE PROCEDURE SP_LIBRO_DIS_CATE(SP_CATE IN VARCHAR2)
AS
BEGIN
    FOR LIBRO IN (SELECT TITULO FROM LIBROS
        WHERE CATEGORIA = SP_CATE
        AND DISPONIBLE = 'S')
    LOOP
        DBMS_OUTPUT.PUT_LINE('Libro disponible: ' || LIBRO.TITULO);
    END LOOP;
END;


--16. TOTAL LIBROS PRESTADOS

CREATE OR REPLACE PROCEDURE SP_LIBROS_PRESTADOS(SP_TOTAL OUT NUMBER)
AS
    CURSOR C_PRESTAMOS IS
        SELECT COUNT(*) AS TOTAL
        FROM PRESTAMOS
        WHERE FECHA_DEVOLUCION IS NULL;
BEGIN
    OPEN C_PRESTAMOS;
        FETCH C_PRESTAMOS INTO SP_TOTAL;
    CLOSE C_PRESTAMOS;
END;


--17. ELIMINAR REPORTE POR ID

CREATE OR REPLACE PROCEDURE ELIMINAR_REPORTE(SP_ID IN NUMBER)
AS
BEGIN
    DELETE FROM REPORTES WHERE ID_REPORTE = SP_ID;
END;


--18. PRESTAMOS POR LIBRO

CREATE OR REPLACE PROCEDURE SP_CON_PRESTAMO_LIBRO (SP_ID_LIBRO IN NUMBER)
AS
BEGIN
    FOR PRESTAMO IN (SELECT * FROM PRESTAMOS WHERE ID_LIBRO = SP_ID_LIBRO)
    LOOP 
        DBMS_OUTPUT.PUT_LINE('Prestamo: ' || PRESTAMO.ID_PRESTAMO);
    END LOOP;
END;
        

--19. USUARIOS POR ROL

CREATE OR REPLACE PROCEDURE SP_USER_POR_ROL(SP_ROL IN VARCHAR2)
AS
BEGIN
    FOR USUARIO IN (SELECT * FROM USUARIOS WHERE ROL = SP_ROL)
    LOOP
        DBMS_OUTPUT.PUT_LINE('Usuario: ' || USUARIO.NOMBRE);
    END LOOP;
END;


-- 20. TODOS LOS LIBROS

CREATE OR REPLACE PROCEDURE SP_LISTA_LIBROS
AS
BEGIN
    FOR LIBRO IN(SELECT * FROM LIBROS) LOOP
        DBMS_OUTPUT.PUT_LINE('Libro: ' || LIBRO.TITULO || ' ' || LIBRO.AUTOR);
    END LOOP;
END;
 